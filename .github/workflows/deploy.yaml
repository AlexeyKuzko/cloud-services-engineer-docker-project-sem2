name: Docker Project Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_scan:
    name: Build and Scan Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Create secrets directory
        run: |
          mkdir -p secrets
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" > secrets/backend.env
          echo "PORT=${{ secrets.PORT }}" >> secrets/backend.env
          echo "HOST=${{ secrets.HOST }}" >> secrets/backend.env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" > secrets/frontend.env
          echo "VUE_APP_API_URL=${{ secrets.VUE_APP_API_URL }}:${{ secrets.PORT }}" >> secrets/frontend.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          load: true
          tags: backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          load: true
          tags: frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner on Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'frontend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  push_to_docker_hub:
    name: Push Docker Images to DockerHub
    runs-on: ubuntu-latest
    needs: build_and_scan
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push Frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  run-with-docker-compose:
    name: Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Create secrets directory
        run: |
          mkdir -p secrets
          echo "NODE_ENV=production" > secrets/backend.env
          echo "PORT=8080" >> secrets/backend.env
          echo "HOST=0.0.0.0" >> secrets/backend.env
          echo "NODE_ENV=production" > secrets/frontend.env
          echo "VUE_APP_API_URL=http://backend:8080" >> secrets/frontend.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build via Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0